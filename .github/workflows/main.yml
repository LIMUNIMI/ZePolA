name: Projucer CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[CI SKIP]') }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        include:
          - os: ubuntu-20.04
            jucer: "Libraries/JUCE/extras/Projucer/Builds/LinuxMakefile/build/Projucer"
            jucer_buildir: "Libraries/JUCE/extras/Projucer/Builds/LinuxMakefile"
            plugin_buildir: "Builds/LinuxMakefile"
            build_cmd: make -j4 CONFIG=Release
            build_prefix: "build"
            label: linux
          - os: macos-latest
            jucer: "Libraries/JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer"
            jucer_buildir: "Libraries/JUCE/extras/Projucer/Builds/MacOSX"
            plugin_buildir: "Builds/MacOSX"
            build_cmd: xcodebuild -project *.xcodeproj -parallelizeTargets -alltargets -configuration Release | xcpretty
            build_prefix: "build/Release"
            standalone_ext: .app
            label: macos
          - os: windows-latest
            jucer: "Libraries/JUCE/extras/Projucer/Builds/VisualStudio2019/x64/Release/App/Projucer.exe"
            jucer_buildir: "Libraries/JUCE/extras/Projucer/Builds/VisualStudio2019"
            plugin_buildir: "Builds/VisualStudio2019"
            build_cmd: msbuild.exe -m:4 *.sln /property:Configuration=Release
            build_prefix: "x64/Release"
            standalone_ext: .exe
            standalone_prefix: "Standalone Plugin/"
            vst3_prefix: "VST3/"
            label: win
          - plugin_name: ZePolA
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.label }}

    steps:
    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev libjack-jackd2-dev lv2-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

    - name: Add msbuild to PATH
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.0.3

    - name: Set up Xcode
      if: runner.os == 'MacOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build Projucer
      shell: bash
      run: ${{ matrix.build_cmd }}
      working-directory: ${{ matrix.jucer_buildir }}

    - name: Log jucer project status
      shell: bash
      run: ${{ matrix.jucer }} --status *.jucer

    - name: Save jucer project version
      id: plugin-version
      if: runner.os == 'Linux'
      shell: bash
      run: echo '::set-output name=PLUGIN_VERSION::'$('${{ matrix.jucer }}' --get-version *.jucer)

    - name: Resave jucer file
      shell: bash
      run: ${{ matrix.jucer }} --resave *.jucer

    - name: Build Plugin
      shell: bash
      run: ${{ matrix.build_cmd }}
      working-directory: ${{ matrix.plugin_buildir }}

    - name: List artifacts in build directory
      shell: bash
      run: ls -l
      working-directory: ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}

    - name: Make script executable
      shell: bash
      run: chmod +x scripts/nest

    - name: Move AU artifacts
      if: runner.os == 'MacOS'
      run: ./scripts/nest -cd ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.au_prefix }}${{ matrix.plugin_name }}.component

    - name: Move VST3 artifacts
      run: ./scripts/nest -cd ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.vst3_prefix }}${{ matrix.plugin_name }}.vst3

    - name: Move Standalone artifacts
      run: ./scripts/nest -cd ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.standalone_prefix }}${{ matrix.plugin_name }}${{ matrix.standalone_ext }}

    - name: Upload AU
      if: runner.os == 'MacOS'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.plugin_name }}_${{ matrix.label }}_au
        path: ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.au_prefix }}${{ matrix.plugin_name }}.component

    - name: Upload VST3
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.plugin_name }}_${{ matrix.label }}_vst3
        path: ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.vst3_prefix }}${{ matrix.plugin_name }}.vst3

    - name: Upload Standalone
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.plugin_name }}_${{ matrix.label }}_standalone
        path: ${{ matrix.plugin_buildir }}/${{ matrix.build_prefix }}/${{ matrix.standalone_prefix }}${{ matrix.plugin_name }}${{ matrix.standalone_ext }}

    outputs:
      plugin_version: ${{ steps.plugin-version.outputs.PLUGIN_VERSION }}
